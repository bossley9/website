#!/usr/bin/env sh
# Gemtext to Markdown converter. Preserves front matter.
# vim:fdm=marker

# linkConvert {{{

linkConvert() {
  local line="$1"
  local mark

  line="$(echo "$line" | tr -s "[:space:]" " ")"
  line="${line##=> }"
  line="${line%% }"

  url="${line%%\ *}"
  alt="${line#*\ }"

  [ -z "$alt" ] && alt="$url"

  case "$url" in
    *.gif|*.jpg|*.jpeg|*.png|*.svg)
      mark="!"
      ;;
  esac

  echo "${mark}[${alt}](${url})"
}

# }}}

# main {{{

inFile="$1"
outFile="$2"

if ! [ -f "$inFile" ] || [ -z "$outFile" ]; then
  echo "USAGE: gmi2md (input gemtext file) (output markdown file)"
  exit 1;
fi

# clear output
printf '%s' "" > "$outFile"

isPreformattedLine=0
needsNewLine=0
IFS=""
while read -r line; do
  case "$line" in
    "\`\`\`"*)
      [ "$isPreformattedLine" -eq 0 ] && \
        isPreformattedLine=1 || \
        isPreformattedLine=0
      ;;
  esac

  outLine="$line"

    # "build": "npm run prepare && eleventy",
  if [ "$isPreformattedLine" -eq 0 ]; then
    case "$line" in
      "=>"*)
        outLine="$(linkConvert "$line")"
        needsNewLine=1
        ;;
      "#"*) needsNewLine=1 ;;
    esac
  fi

  printf '%s\n' "$outLine" >> "$outFile"
  [ "$needsNewLine" -eq 1 ] && needsNewLine=0 && printf '\n' >> "$outFile"
done < "$inFile"

echo "converted '${inFile}' -> '${outFile}'"

# }}}
